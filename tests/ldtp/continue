#!/usr/bin/env python
# -*- Mode: Python; indent-tabs-mode: nil; tab-width: 2; coding: utf-8 -*-
#
# This file is part of Déjà Dup.
# For copyright information, see AUTHORS.
#
# Déjà Dup is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# Déjà Dup is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Déjà Dup.  If not, see <http://www.gnu.org/licenses/>.

# Test whether we correctly clean up from a cancel during backup

import os
import sys
sys.path.insert(0, sys.path[0]+'/..')
import base
import ldtp
import time

if not base.dup_meets_version(0, 6, 13):
  base.skip()

def wait_for_volume(destdir):
  count = 0
  while len(os.listdir(destdir)) < 2 and count < 200:
    time.sleep(1)
    count += 1

def noencrypt():
  base.setup()
  base.backup_simple(backend='file', finish=False, encrypt=False, includes=['/usr/bin'])
  destdir = base.get_temp_name('local')
  wait_for_volume(destdir)
  ldtp.click('frmBackUp', 'btnResumeLater')
  ldtp.waittillguinotexist('frmBackUp')
  vols_before = os.listdir(destdir)
  assert vols_before != []
  assert base.num_manifests() == 0
  base.backup_simple(encrypt=None)
  vols_after = os.listdir(destdir)
  assert base.num_manifests() == 1
  assert vols_before[0] in vols_after

def encrypt():
  base.setup()
  base.backup_simple(backend='file', finish=False, includes=['/usr/bin'])
  destdir = base.get_temp_name('local')
  wait_for_volume(destdir)
  ldtp.click('frmBackUp', 'btnResumeLater')
  ldtp.waittillguinotexist('frmBackUp')
  vols_before = os.listdir(destdir)
  assert vols_before != []
  assert base.num_manifests() == 0
  base.backup_simple()
  vols_after = os.listdir(destdir)
  assert base.num_manifests() == 1
  assert vols_before[0] in vols_after

base.run(noencrypt)
base.run(encrypt)
