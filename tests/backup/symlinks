#!/usr/bin/env python
# -*- Mode: Python; indent-tabs-mode: nil; tab-width: 2; coding: utf-8 -*-
#
# This file is part of Déjà Dup.
# © 2010,2011 Michael Terry <mike@mterry.name>
#
# Déjà Dup is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# Déjà Dup is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Déjà Dup.  If not, see <http://www.gnu.org/licenses/>.

# Test whether we correctly handle symlinks

import sys
import os
sys.path.insert(0, sys.path[0]+'/..')
import base

def direct():
  restoredir = base.get_temp_name('restore')
  base.setup()
  base.backup_simple(backend='file', includes=['data/symlink/simple'])
  base.start_deja_dup()
  base.restore_simple(restoredir)
  root = os.path.join(restoredir, os.path.normpath(sys.path[0])[1:], 'data/symlink/simple')
  assert os.path.islink(root)
  assert os.path.exists(root)

def subdir():
  restoredir = base.get_temp_name('restore')
  base.setup()
  base.backup_simple(backend='file', includes=['data/symlink/one/two/fourreal'])
  base.start_deja_dup()
  base.restore_simple(restoredir)
  root = os.path.join(restoredir, os.path.normpath(sys.path[0])[1:], 'data/symlink')
  assert os.path.islink(root+'/one')
  assert os.path.exists(root+'/one')
  assert os.path.islink(root+'/one/two')
  assert os.path.exists(root+'/one/two')
  assert os.path.islink(root+'/one/two/three')
  assert os.path.exists(root+'/one/two/three')
  assert base.file_equals(root+'/onereal/tworeal/threereal', 'three\n')
  assert base.file_equals(root+'/onereal/tworeal/fourreal/four.txt', 'four\n')
  assert base.file_equals(root+'/one/two/fourreal/four.txt', 'four\n')

base.run(direct)
base.run(subdir)
