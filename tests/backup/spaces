#!/usr/bin/env python
# -*- Mode: Python; indent-tabs-mode: nil; tab-width: 2; coding: utf-8 -*-
#
# This file is part of Déjà Dup.
# For copyright information, see AUTHORS.
#
# Déjà Dup is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# Déjà Dup is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Déjà Dup.  If not, see <http://www.gnu.org/licenses/>.

# Test whether we correctly handle folders with spaces

import sys
import os
sys.path.insert(0, sys.path[0]+'/..')
import base
import ldtp

def test():
  restoredir = os.path.join(base.get_temp_name('restore'), 'spa ces')
  backupdir = os.path.join(base.get_temp_name('backup'), 'spa ces')
  os.makedirs(backupdir)
  base.setup()
  base.backup_simple(backend='file', dest=backupdir, includes=['data/spa [ ces'], excludes=['data/spa [ ces/bad one'])
  base.restore_simple(restoredir)
  root = os.path.join(restoredir, os.path.normpath(sys.path[0])[1:], 'data/spa [ ces')
  assert base.file_equals(os.path.join(root, 'one space/file.txt'), 'space\n')
  assert not os.path.exists(os.path.join(root, 'bad one'))

base.run(test)
